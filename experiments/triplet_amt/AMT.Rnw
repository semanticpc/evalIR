\documentclass[prodmode,acmtecs]{reports}

% Package to generate and customize Algorithm as per ACM style
\usepackage[ruled]{algorithm2e}
\renewcommand{\algorithmcfname}{ALGORITHM}
\SetAlFnt{\small}
\SetAlCapFnt{\small}
\SetAlCapNameFnt{\small}
\SetAlCapHSkip{0pt}
\IncMargin{-\parindent}


\usepackage[square,comma]{natbib}

% Metadata Information
\acmVolume{}
\acmNumber{}
\acmArticle{}
\acmYear{}
\acmMonth{}

% Document starts
\begin{document}

% Page heads
\markboth{Praveen Chandar}{Triplet Judgments using Mechanical Turk}

% Title portion
\title{Triplet Judgments using Mechanical Turk}
\author{Praveen Chandar
\affil{University of Delaware}}

\begin{abstract}

\end{abstract}

%\category{C.2.2}{Computer-Communication Networks}{Network Protocols}

%\terms{Design, Algorithms, Performance}

%\keywords{Wireless sensor networks, media access control,multi-channel, radio interference, time synchronization}

%\acmformat{}

%\begin{bottomstuff}
%\end{bottomstuff}

\maketitle


\section{Introduction}



The various steps involved are as follows:
\begin{bulletlist}
\item Document Pooling 
\item Generate and Sample triplets
\item Create HITs
\item Set Qualifications
\item Submit HITs
\end{bulletlist}


\section{Document Pooling}
The \emph{evalIR} package has a function to pool documents at a specified depth given a list of runs in TREC format. 
<<tidy=FALSE>>=
library(evalIR, quietly=T)
library(plyr)

trec09 <- list.files(path='../demo/data/diversity/trec2009', full.names=T)
trec09_runids <- basename(trec09)

pooling_depth = 5
runs <- read.runs(runPaths= trec09,
                  runids= trec09_runids,
                  limit= pooling_depth)
  
topK_pooling <- function(x, pooling_depth=5){
  pooled_docs <- pooling.topk(runs$getRankMatrix(x$query), pooling_depth)
  return(data.frame(docID=names(pooled_docs)))
}

pooled_docs <- adply(data.frame(query=runs$getQueries()), 1, topK_pooling)
                      
head(pooled_docs, n=5)
@


\section{Generate and Sample Triplets }


<<tidy=FALSE,echo=TRUE>>=
generate_triplets <- function(x, pooled_docs){
  documents <- subset(pooled_docs, query == x)
  documents$docID <- as.character(documents$docID)
  doc_ids <- documents$docID
  triplets <- ddply(documents, 
                    .(docID), 
                    function(x)  
                      t(combn(doc_ids[!doc_ids %in% c(x$docID)],2)))
  colnames(triplets) <- c('top_doc','left_doc','right_doc')
  return(triplets)
}



triplets <- ddply(data.frame(query=runs$getQueries()), 
                  .(query),
                  function(x) generate_triplets((x$query), pooled_docs))
@

\section{Create HITs}

\emph{MTurkR} can be used to automatically submit jobs from R to Amazon Mechanical Turk. 

\end{document}